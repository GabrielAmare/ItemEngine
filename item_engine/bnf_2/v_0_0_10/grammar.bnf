@lang:"bnf"
@version:"0.0.10"
@whitespace:" \n\t"
c:digits    = '0123456789'
c:letters   = 'abcdefghijklmnopqrstuvwxyz'
c:LETTERS   = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
c:alpha     = letters LETTERS '_'
c:alphanum  = alpha digits
c:sq        = "'"
c:dq        = '"'

o:P_Inv      = 'not ' {Var as arg}
o:P_Optional = 'optional ' {P_Inv_ as arg}
o:P_Repeat   = 'repeat ' {P_Inv_ as arg}
o:P_RepeatP  = '+' {P_Inv_ as arg}
o:P_All      = ' '^{P_Skip_ in args}


g:P_Atom_    = Str | Var
g:P_Inv_     = P_Inv | P_Atom_
g:P_Skip_    = P_Optional | P_Repeat | P_RepeatP | P_Inv_
g:P_All_     = P_All | P_Skip_

o:Str        = {STR as expr}
o:Var        = {VAR as name}

o:O_Match    = '{' {VAR as name} '}'
o:O_MatchAs  = '{' {VAR as name} ' as ' {VAR as key} '}'
o:O_MatchIn  = '{' {VAR as name} ' in ' {VAR as key} '}'

o:O_All      = ' '^{O_Atom_ in args}
o:O_Optional = '[' {O_Any_ as child} ']'
o:O_Repeat   = '(' {O_Any_ as child} ')'
o:O_Enum     = {Str as separator} '.' {O_MatchIn as child}
o:O_EnumP    = {Str as separator} '^' {O_MatchIn as child}

o:Charset  = 'c:' {VAR as name} ' = ' ' '.{CharsetArg in args}
o:Pattern  = 'p:' {VAR as name} ' = ' ' | '.{P_All_ in args}
o:Operator = 'o:' {VAR as name} ' = ' ' | '.{O_All_ in args}
o:Group    = 'g:' {VAR as name} ' = ' ' | '^{VAR in names}

o:Grammar  = 'lang:' {STR as lang} '\n'
             'version:' {STR as version} '\n'
             'whitespace:' {STR as whitespace} '\n'
             '\n'.{GrammarArg in args}

g:CharsetArg = Str | Var
g:PatternArg = Str | Var
g:GrammarArg = Operator | Group | Charset | Pattern

g:O_Atom_      = Str | O_Match | O_MatchAs | O_MatchIn | O_Enum | O_EnumP | O_Optional | O_Repeat
g:O_All_       = O_Atom_ | O_All